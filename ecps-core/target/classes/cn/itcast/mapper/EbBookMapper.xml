<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.mapper.EbBookMapper" >
  <resultMap id="BaseResultMap" type="cn.itcast.model.Book" >
    <id column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="book_writer" property="bookWriter" jdbcType="VARCHAR" />
    <result column="book_year" property="bookYear" jdbcType="DATE" />
    <result column="book_price" property="bookPrice" jdbcType="INTEGER" />
    <result column="book_press" property="bookPress" jdbcType="VARCHAR" />
    <result column="commodity_type" property="commodityType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    book_id, book_name, book_writer, book_year, book_price, book_press, commodity_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from Book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.itcast.model.Book" >
    insert into Book (book_id, book_name, book_writer, 
      book_year, book_price, book_press, 
      commodity_type)
    values (#{bookId,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookWriter,jdbcType=VARCHAR}, 
      #{bookYear,jdbcType=DATE}, #{bookPrice,jdbcType=INTEGER}, #{bookPress,jdbcType=VARCHAR}, 
      #{commodityType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.model.Book" >
    insert into Book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="bookWriter != null" >
        book_writer,
      </if>
      <if test="bookYear != null" >
        book_year,
      </if>
      <if test="bookPrice != null" >
        book_price,
      </if>
      <if test="bookPress != null" >
        book_press,
      </if>
      <if test="commodityType != null" >
        commodity_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookWriter != null" >
        #{bookWriter,jdbcType=VARCHAR},
      </if>
      <if test="bookYear != null" >
        #{bookYear,jdbcType=DATE},
      </if>
      <if test="bookPrice != null" >
        #{bookPrice,jdbcType=INTEGER},
      </if>
      <if test="bookPress != null" >
        #{bookPress,jdbcType=VARCHAR},
      </if>
      <if test="commodityType != null" >
        #{commodityType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.model.Book" >
    update Book
    <set >
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookWriter != null" >
        book_writer = #{bookWriter,jdbcType=VARCHAR},
      </if>
      <if test="bookYear != null" >
        book_year = #{bookYear,jdbcType=DATE},
      </if>
      <if test="bookPrice != null" >
        book_price = #{bookPrice,jdbcType=INTEGER},
      </if>
      <if test="bookPress != null" >
        book_press = #{bookPress,jdbcType=VARCHAR},
      </if>
      <if test="commodityType != null" >
        commodity_type = #{commodityType,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.model.Book" >
    update Book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_writer = #{bookWriter,jdbcType=VARCHAR},
      book_year = #{bookYear,jdbcType=DATE},
      book_price = #{bookPrice,jdbcType=INTEGER},
      book_press = #{bookPress,jdbcType=VARCHAR},
      commodity_type = #{commodityType,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>